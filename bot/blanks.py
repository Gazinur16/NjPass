class Blanks:
    # HELLO
    hello_new_user = '–ü—Ä–∏–≤–µ—Ç–≤—É—é –≤–∞—Å –≤ <b>NjPass</b> üëæ\n\n' \
                     '–¢—É—Ç –≤—ã —Å–º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å <b><i>–í–∞—à–∏</i></b> –ø–∞—Ä–æ–ª–∏ üîí\n\n' \
                     '–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å <u>–ú–∞—Å—Ç–µ—Ä-–ö–ª—é—á</u> üîë\n' \
                     '–û–Ω –Ω—É–∂–µ–Ω –¥–ª—è –∑–∞—à–∏—Ñ—Ä–æ–≤–∫–∏ –∏ —Ä–∞–∑—à–∏—Ñ—Ä–æ–≤–∫–∏ –≤–∞—à–∏—Ö –ø–∞—Ä–æ–ª–µ–π üíæ\n\n' \
                     '–ë–æ—Ç –Ω–µ –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –µ–≥–æ –∏ –¥–æ—Å—Ç—É –∫ –∫–ª—é—á–∞–º –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ —É –í–∞—Å üí´'

    hello_old_user = '–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º –≤ <b>NjPass</b> üëæ\n\n' \
                     '–¢—É—Ç <b><i>–í–∞—à–∏</i></b> –ø–∞—Ä–æ–ª–∏ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ üîí'

    update = 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å'
    use_pass = '‚û°Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å'
    close = '‚ùå –ó–∞–∫—Ä—ã—Ç—å'
    closet = 'üëæ –ó–∞–∫—Ä—ã—Ç–æ...'
    save = 'üíæ –°–æ—Ö—Ä–Ω–∞–∏—Ç—å'
    skip = '‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'

    create_pass = 'üîë –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–æ–ª—å'
    input_my_pass = '‚úèÔ∏è –í–≤–µ—Å—Ç–∏ —Å–≤–æ–π –ø–∞—Ä–æ–ª—å'
    save_pass = 'üîè –°–æ–∑–¥–∞—Ç—å –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å'
    my_pass = 'üîí –ú–æ–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø–∞—Ä–æ–ª–∏'

    create_msr_key = 'üîê –°–æ–∑–¥–∞—Ç—å –ú–∞—Å—Ç–µ—Ä-–ö–ª—é—á'
    no_save_msr_key = '<b>–ú–∞—Å—Ç–µ—Ä-–ö–ª—é—á</b> –∫–ª—é—á —É–∂–µ —Å–æ–∑–¥–∞–Ω ‚ö†Ô∏è'
    # input_my_msr_pass = '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π <b>–ú–∞—Å—Ç–µ—Ä-–ö–ª—é—á</b> ‚úèÔ∏è'

    input_name_pass = '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è\n(20 —Å–∏–º–≤–æ–ª–æ–≤) üîñ'
    big_len_name_pass = '–í–≤–µ–¥–µ–Ω–æ–µ –≤–∞–º–∏ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ <b>–ø—Ä–µ–≤—ã—à–∞–µ—Ç 20 —Å–∏–º–≤–æ–ª–æ–≤</b> ‚ö†Ô∏è\n\n' \
                        '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ —Å–Ω–æ–≤–∞ üîñ'

    input_login = '–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –æ—Ç —Å–µ—Ä–≤–∏—Å–∞ (–ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã/—Ü–∏—Ñ—Ä—ã)üë§'
    choose_gen_pass_or_my_pass = 'üëæ –í—ã —Ö–æ—Ç–∏—Ç–µ <b>—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–æ–ª—å</b>, –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ –µ–≥–æ <b>—Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ</b>?'
    input_pass = '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –æ—Ç —Å–µ—Ä–≤–∏—Å–∞ (–ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã/—Ü–∏—Ñ—Ä—ã) üîê'
    # input_pass = '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –æ—Ç —Å–µ—Ä–≤–∏—Å–∞ (–ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã/—Ü–∏—Ñ—Ä—ã) üîê'
    input_description = '–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ/–¥–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø–∞—Ä–æ–ª—è üìé'

    @classmethod
    def get_create_msr_key(cls, msr_key: bytes) -> str:
        create_msr_key = 'üîê  –í–∞—Ç –≤–∞—à –ª–∏—á–Ω—ã–π <b>–ú–∞—Å—Ç–µ—Ä-–ö–ª—é—á</b>:\n\n' \
                         f'<code>{msr_key}</code>\n\n' \
                         '–ü–æ–∑–∞–±–æ—Ç—å—Ç–µ—Å—å –æ –µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç–∏, ' \
                         '–∏–Ω–∞—á–µ –≤—ã <b><i>–Ω–∞–≤—Å–µ–≥–¥–∞ –ø–æ—Ç–µ—Ä—è–π–µ—Ç–µ</i></b> –¥–æ—Å—Ç—É –∫ —Å–≤–æ–∏–º –ø–∞—Ä–æ–ª—è–º ‚òùÔ∏è\n\n' \
                         '‚ö†Ô∏è –î–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç <b>—É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 3 –º–∏–Ω—É—Ç—ã</b> –≤ —Ü–µ–ª—è—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏\n\n'\
                         '–í—ã –º–æ–∂–µ—Ç–µ:\n' \
                         '- –∫–ª–∏–∫–Ω—É—Ç—å –Ω–∞ –∫–ª—é—á, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ üîó\n' \
                         '- –ø–µ—Ä–µ—Å–ª–∞—Ç—å –∫–ª—é—á –≤ –¥—Ä—É–≥–æ–π —á–∞—Ç ‚Ü™Ô∏è'

        return create_msr_key

    @classmethod
    def get_create_pass(cls, password: str, len_pass: int) -> str:
        create_pass = f'–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω {len_pass}-–∑–Ω–∞—á–Ω—ã–π –ø–∞—Ä–æ–ª—å:\n\n' \
                      f'üîê <code>{password}</code>\n\n' \
                      f'–ö–ª–∏–∫–Ω–∏—Ç–µ, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å ‚òùÔ∏è'

        return create_pass

    @classmethod
    def index_len_pass(cls, choose_len_pass: int, index_btn: int) -> str:
        if choose_len_pass == index_btn:
            return f'‚úÖ {index_btn}'
        else:
            return f'{index_btn}'


# async def _example1():
#     print(Blanks.message_when_clicked('–ó–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å –æ—Å—Ç–∞—Ç–∫–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ'))
#
#
# if __name__ == '__main__':
#     asyncio.run(_example1())
